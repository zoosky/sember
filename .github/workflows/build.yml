name: Build
on:
  push:
    branches:
      - master
jobs:
  setup:
    - uses: paulhatch/semantic-version@v4.0.2
      id: semver
      with:
        # The prefix to use to identify tags
        tag_prefix: "v"
        # A string which, if present in a git commit, indicates that a change represents a
        # major (breaking) change, supports regular expressions wrapped with '/'
        major_pattern: "(MAJOR)"
        # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
        minor_pattern: "(MINOR)"
        # A string to determine the format of the version output
        format: "${major}.${minor}.${patch}"
        # If this is set to true, *every* commit will be treated as a new version.
        bump_each_commit: true
    - run: git log $(git describe --tags --abbrev=0)..HEAD --no-merges --oneline > new-in-this-release.log
    - name: Read git log
      id: package
      uses: juliangruber/read-file-action@v1
      with:
        path: ./new-in-this-release.log
    - name: "Create Release"
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        tag_name: ${{steps.semver.outputs.version_tag}}
        release_name: ${{steps.semver.outputs.version_tag}}
        body: ${{ steps.package.outputs.content }}
        draft: false
        prerelease: false
    - name: 'Write Upload URL To File'
      run: |
        echo "${{steps.create_release.outputs.upload_url}}" > upload_url.txt
    - name: 'Publish Upload URL'
      uses: actions/upload-artifact@v2-preview
      with:
        name: 'upload_url.txt'
        path: 'upload_url.txt'

  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: "Publish"
        uses: actions/upload-artifact@v2-preview
        with:
          name: sember-linux
          path: target/release/sember
      - name: "Upload"
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: target/release/sember
          asset_name: sember-linux
          asset_content_type: application/octet-stream
      